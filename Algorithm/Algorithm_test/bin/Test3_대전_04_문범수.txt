1-1) 전위순회
	void preOrder(node){
		System.out.println(node.data);
		preOrder(node.left);
		preOrder(node.right);
	}
1-2) 중위순회
	void inOrder(node){
		preOrder(node.left);
		System.out.println(node.data);
		preOrder(node.right);
	}
	
1-3) 후위순회
	void postOrder(node){
		postOrder(node.left);
		postOrder(node.right);
		System.out.println(node.data);
	}
	
2. 완전이진트리 정의 및 특징
정의 : 완전이진트리란 각 노드별로 왼쪽, 오른쪽 자식이 배정된 형태로
leaf 노드를 제외한 모든 노드들의 왼쪽, 오른쪽 자식이 배정되어 있는 경우이다.
complete binary tree 라고 한다.

특징 : 완전이진트리는 leaf 노드를 제외하곤 각 level에서 최대로 가질 수 있는 node가 배정되어 있다.
또한 노드가 추가될 때 왼쪽에서부터 차례대로 추가되는 특징을 가지고 있다.


3. 편향이진트리의 문제점
편향 이진 트리는 왼쪽 혹은 오른쪽으로 편향된 방향을 가진 이진트리를 의미한다.
즉 한쪽으로 편향된 방향을 갖게 하기 위해서 index를 왼쪽은 i * 2, 오른쪽은 i * 2 + 1 만큼 늘리면서 node를 추가한다.
이러한 indexing은 사용하지 않는 공간이 node를 추가함에 따라 기하급수적으로 늘어나기 때문에
비효율적인 트리라고 볼 수 있다.



